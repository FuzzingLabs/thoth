type u8 = u8;
type u16 = u16;
type u32 = u32;
type enum_match::enum_match::MyEnum = Enum<ut@enum_match::enum_match::MyEnum, u8, u16, u32>;

libfunc enum_match<enum_match::enum_match::MyEnum> = enum_match<enum_match::enum_match::MyEnum>;
libfunc branch_align = branch_align;
libfunc drop<u8> = drop<u8>;
libfunc u16_const<1> = u16_const<1>;
libfunc store_temp<u16> = store_temp<u16>;
libfunc jump = jump;
libfunc drop<u32> = drop<u32>;
libfunc u16_const<0> = u16_const<0>;
libfunc rename<u16> = rename<u16>;
libfunc u16_const<16> = u16_const<16>;
libfunc enum_init<enum_match::enum_match::MyEnum, 1> = enum_init<enum_match::enum_match::MyEnum, 1>;
libfunc store_temp<enum_match::enum_match::MyEnum> = store_temp<enum_match::enum_match::MyEnum>;
libfunc function_call<user@enum_match::enum_match::get_my_enum_b> = function_call<user@enum_match::enum_match::get_my_enum_b>;

enum_match<enum_match::enum_match::MyEnum>([0]) { fallthrough([1]) 6([2]) 9([3]) };
branch_align() -> ();
drop<u8>([1]) -> ();
u16_const<1>() -> ([4]);
store_temp<u16>([4]) -> ([5]);
jump() { 13() };
branch_align() -> ();
store_temp<u16>([2]) -> ([5]);
jump() { 13() };
branch_align() -> ();
drop<u32>([3]) -> ();
u16_const<0>() -> ([6]);
store_temp<u16>([6]) -> ([5]);
rename<u16>([5]) -> ([7]);
return([7]);
u16_const<16>() -> ([0]);
enum_init<enum_match::enum_match::MyEnum, 1>([0]) -> ([1]);
store_temp<enum_match::enum_match::MyEnum>([1]) -> ([3]);
function_call<user@enum_match::enum_match::get_my_enum_b>([3]) -> ([2]);
rename<u16>([2]) -> ([4]);
return([4]);

enum_match::enum_match::get_my_enum_b@0([0]: enum_match::enum_match::MyEnum) -> (u16);
enum_match::enum_match::main@15() -> (u16);
