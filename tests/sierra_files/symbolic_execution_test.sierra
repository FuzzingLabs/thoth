type felt252 = felt252;
type NonZero<felt252> = NonZero<felt252>;

libfunc felt252_const<102> = felt252_const<102>;
libfunc felt252_sub = felt252_sub;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc felt252_const<117> = felt252_const<117>;
libfunc felt252_const<122> = felt252_const<122>;
libfunc felt252_const<0> = felt252_const<0>;

felt252_const<102>() -> ([4]);
felt252_sub([0], [4]) -> ([5]);
store_temp<felt252>([5]) -> ([5]);
felt252_is_zero([5]) { fallthrough() 6([6]) };
branch_align() -> ();
jump() { 8() };
branch_align() -> ();
drop<NonZero<felt252>>([6]) -> ();
felt252_const<117>() -> ([7]);
felt252_sub([1], [7]) -> ([8]);
store_temp<felt252>([8]) -> ([8]);
felt252_is_zero([8]) { fallthrough() 14([9]) };
branch_align() -> ();
jump() { 16() };
branch_align() -> ();
drop<NonZero<felt252>>([9]) -> ();
felt252_const<122>() -> ([10]);
felt252_sub([2], [10]) -> ([11]);
store_temp<felt252>([11]) -> ([11]);
felt252_is_zero([11]) { fallthrough() 22([12]) };
branch_align() -> ();
jump() { 24() };
branch_align() -> ();
drop<NonZero<felt252>>([12]) -> ();
felt252_const<122>() -> ([13]);
felt252_sub([3], [13]) -> ([14]);
store_temp<felt252>([14]) -> ([14]);
felt252_is_zero([14]) { fallthrough() 30([15]) };
branch_align() -> ();
jump() { 32() };
branch_align() -> ();
drop<NonZero<felt252>>([15]) -> ();
felt252_const<0>() -> ([16]);
store_temp<felt252>([16]) -> ([17]);
return([17]);

symbolic::symbolic::symbolic_execution_test@0([0]: felt252, [1]: felt252, [2]: felt252, [3]: felt252) -> (felt252);
