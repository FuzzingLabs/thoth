type u8 = u8;
type u16 = u16;
type u32 = u32;
type u64 = u64;
type u128 = u128;
type felt252 = felt252;
type RangeCheck = RangeCheck;
type Unit = Struct<ut@Tuple>;

libfunc u8_const<0> = u8_const<0>;
libfunc u16_const<0> = u16_const<0>;
libfunc u32_const<0> = u32_const<0>;
libfunc u64_const<0> = u64_const<0>;
libfunc u128_const<0> = u128_const<0>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc dup<u8> = dup<u8>;
libfunc u8_to_felt252 = u8_to_felt252;
libfunc drop<felt252> = drop<felt252>;
libfunc store_temp<u16> = store_temp<u16>;
libfunc dup<u16> = dup<u16>;
libfunc u16_to_felt252 = u16_to_felt252;
libfunc store_temp<u32> = store_temp<u32>;
libfunc dup<u32> = dup<u32>;
libfunc u32_to_felt252 = u32_to_felt252;
libfunc store_temp<u64> = store_temp<u64>;
libfunc dup<u64> = dup<u64>;
libfunc u64_to_felt252 = u64_to_felt252;
libfunc store_temp<u128> = store_temp<u128>;
libfunc dup<u128> = dup<u128>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc u8_wide_mul = u8_wide_mul;
libfunc drop<u16> = drop<u16>;
libfunc u16_wide_mul = u16_wide_mul;
libfunc drop<u32> = drop<u32>;
libfunc u32_wide_mul = u32_wide_mul;
libfunc drop<u64> = drop<u64>;
libfunc u64_wide_mul = u64_wide_mul;
libfunc drop<u128> = drop<u128>;
libfunc u128_wide_mul = u128_wide_mul;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<Unit> = store_temp<Unit>;

u8_const<0>() -> ([1]);
u16_const<0>() -> ([2]);
u32_const<0>() -> ([3]);
u64_const<0>() -> ([4]);
u128_const<0>() -> ([5]);
store_temp<u8>([1]) -> ([1]);
dup<u8>([1]) -> ([1], [7]);
u8_to_felt252([7]) -> ([6]);
drop<felt252>([6]) -> ();
store_temp<u16>([2]) -> ([2]);
dup<u16>([2]) -> ([2], [9]);
u16_to_felt252([9]) -> ([8]);
drop<felt252>([8]) -> ();
store_temp<u32>([3]) -> ([3]);
dup<u32>([3]) -> ([3], [11]);
u32_to_felt252([11]) -> ([10]);
drop<felt252>([10]) -> ();
store_temp<u64>([4]) -> ([4]);
dup<u64>([4]) -> ([4], [13]);
u64_to_felt252([13]) -> ([12]);
drop<felt252>([12]) -> ();
store_temp<u128>([5]) -> ([5]);
dup<u128>([5]) -> ([5], [15]);
u128_to_felt252([15]) -> ([14]);
drop<felt252>([14]) -> ();
dup<u8>([1]) -> ([1], [17]);
u8_wide_mul([17], [1]) -> ([16]);
drop<u16>([16]) -> ();
dup<u16>([2]) -> ([2], [19]);
u16_wide_mul([19], [2]) -> ([18]);
drop<u32>([18]) -> ();
dup<u32>([3]) -> ([3], [21]);
u32_wide_mul([21], [3]) -> ([20]);
drop<u64>([20]) -> ();
dup<u64>([4]) -> ([4], [23]);
u64_wide_mul([23], [4]) -> ([22]);
drop<u128>([22]) -> ();
dup<u128>([5]) -> ([5], [27]);
u128_wide_mul([0], [27], [5]) -> ([24], [25], [26]);
drop<u128>([25]) -> ();
drop<u128>([26]) -> ();
struct_construct<Unit>() -> ([28]);
store_temp<RangeCheck>([24]) -> ([29]);
store_temp<Unit>([28]) -> ([30]);
return([29], [30]);

uint::uint::main@0([0]: RangeCheck) -> (RangeCheck, Unit);
