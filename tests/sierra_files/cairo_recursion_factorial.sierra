type felt = felt;
type NonZero<felt> = NonZero<felt>;
type Unit = Struct<ut@Tuple>;

libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc felt_const<1> = felt_const<1>;
libfunc dup<felt> = dup<felt>;
libfunc felt_sub = felt_sub;
libfunc store_temp<felt> = store_temp<felt>;
libfunc felt_jump_nz = felt_jump_nz;
libfunc drop<felt> = drop<felt>;
libfunc branch_align = branch_align;
libfunc drop<NonZero<felt>> = drop<NonZero<felt>>;
libfunc rename<felt> = rename<felt>;
libfunc function_call<user@cairo_recursion_factorial::cairo_recursion_factorial::factorial> = function_call<user@cairo_recursion_factorial::cairo_recursion_factorial::factorial>;
libfunc felt_mul = felt_mul;
libfunc felt_const<5> = felt_const<5>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc rename<Unit> = rename<Unit>;

revoke_ap_tracking() -> ();
felt_const<1>() -> ([1]);
dup<felt>([0]) -> ([0], [12]);
felt_sub([12], [1]) -> ([2]);
store_temp<felt>([2]) -> ([2]);
felt_jump_nz([2]) { fallthrough() 11([3]) };
drop<felt>([0]) -> ();
branch_align() -> ();
felt_const<1>() -> ([4]);
store_temp<felt>([4]) -> ([5]);
return([5]);
drop<NonZero<felt>>([3]) -> ();
branch_align() -> ();
felt_const<1>() -> ([6]);
dup<felt>([0]) -> ([0], [13]);
felt_sub([13], [6]) -> ([7]);
store_temp<felt>([7]) -> ([7]);
rename<felt>([7]) -> ([9]);
function_call<user@cairo_recursion_factorial::cairo_recursion_factorial::factorial>([9]) -> ([8]);
felt_mul([0], [8]) -> ([10]);
store_temp<felt>([10]) -> ([10]);
rename<felt>([10]) -> ([11]);
return([11]);
revoke_ap_tracking() -> ();
felt_const<5>() -> ([0]);
store_temp<felt>([0]) -> ([2]);
function_call<user@cairo_recursion_factorial::cairo_recursion_factorial::factorial>([2]) -> ([1]);
drop<felt>([1]) -> ();
struct_construct<Unit>() -> ([3]);
store_temp<Unit>([3]) -> ([3]);
rename<Unit>([3]) -> ([4]);
return([4]);

cairo_recursion_factorial::cairo_recursion_factorial::factorial@0([0]: felt) -> (felt);
cairo_recursion_factorial::cairo_recursion_factorial::recursion_test@23() -> (Unit);
