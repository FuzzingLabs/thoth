type felt252 = felt252;
type NonZero<felt252> = NonZero<felt252>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<((),)> = Enum<ut@core::PanicResult::<((),)>, Tuple<Unit>, Array<felt252>>;

libfunc felt252_add = felt252_add;
libfunc felt252_const<10> = felt252_const<10>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_is_zero = felt252_is_zero;
libfunc branch_align = branch_align;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc jump = jump;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc bool_not_impl = bool_not_impl;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc drop<Unit> = drop<Unit>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::PanicResult::<((),)>, 0> = enum_init<core::PanicResult::<((),)>, 0>;
libfunc store_temp<core::PanicResult::<((),)>> = store_temp<core::PanicResult::<((),)>>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc enum_init<core::PanicResult::<((),)>, 1> = enum_init<core::PanicResult::<((),)>, 1>;

felt252_add([0], [1]) -> ([2]);
felt252_const<10>() -> ([3]);
store_temp<felt252>([2]) -> ([2]);
felt252_sub([2], [3]) -> ([4]);
store_temp<felt252>([4]) -> ([4]);
felt252_is_zero([4]) { fallthrough() 11([5]) };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 1>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 16() };
branch_align() -> ();
drop<NonZero<felt252>>([5]) -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 0>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
bool_not_impl([8]) -> ([11]);
store_temp<core::bool>([11]) -> ([11]);
enum_match<core::bool>([11]) { fallthrough([12]) 26([13]) };
branch_align() -> ();
drop<Unit>([12]) -> ();
struct_construct<Unit>() -> ([14]);
struct_construct<Tuple<Unit>>([14]) -> ([15]);
enum_init<core::PanicResult::<((),)>, 0>([15]) -> ([16]);
store_temp<core::PanicResult::<((),)>>([16]) -> ([17]);
return([17]);
branch_align() -> ();
drop<Unit>([13]) -> ();
array_new<felt252>() -> ([18]);
felt252_const<0>() -> ([19]);
store_temp<felt252>([19]) -> ([19]);
array_append<felt252>([18], [19]) -> ([20]);
enum_init<core::PanicResult::<((),)>, 1>([20]) -> ([21]);
store_temp<core::PanicResult::<((),)>>([21]) -> ([22]);
return([22]);

test_checker::test_checker::thoth_test_sum@0([0]: felt252, [1]: felt252) -> (core::PanicResult::<((),)>);
